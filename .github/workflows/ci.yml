name: run tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "**.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"
  workflow_dispatch:
    inputs:
      job:
        description: "Run a single job"
        required: false
        default: ""

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

env:
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

jobs:
  setup:
    name: "setup - ${{ matrix.label }}"
    runs-on: ${{matrix.os}}
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - label: Linux
            os: ubuntu-24.04
          - label: Win
            os: windows-2025
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node: 22.18.0
          cache: "pnpm"
      - uses: "nick-fields/retry@v3.0.2"
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm fetch --ignore-scripts

  dependency-check:
    name: "dependency-check - ${{ matrix.label }}"
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'dependency-check' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - label: Linux - 22.x
            node: 22.18.0
            os: ubuntu-24.04
          - label: Linux - 24.x
            node: 24.5.0
            os: ubuntu-24.04
          - label: Win - 22.x
            node: 22.18.0
            os: windows-2025
          - label: Win - 24.x
            node: 24.5.0
            os: windows-2025
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"
      - name: pnpm install
        id: install
        run: |
          pnpm install --production --frozen-lockfile 2>&1 | tee out
          echo "pnpmoutput<<EOF" >> $GITHUB_OUTPUT
          cat out >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Circular Dependency
        if: contains(steps.install.outputs.pnpmoutput, 'cyclic')
        run: exit 1

  massimo:
    name: "massimo - ${{ matrix.label }}"
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'massimo' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - label: Linux - 22.x
            node: 22.18.0
            os: ubuntu-24.04
          - label: Linux - 24.x
            node: 24.5.0
            os: ubuntu-24.04
          - label: Win - 22.x
            node: 22.18.0
            os: windows-2025
          - label: Win - 24.x
            node: 24.5.0
            os: windows-2025
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"
      - uses: "nick-fields/retry@v3.0.2"
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run massimo package test suite
        run: cd packages/massimo && pnpm test && pnpm run lint

  massimo-cli:
    name: "massimo-cli - ${{ matrix.label }}"
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'massimo-cli' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - label: Linux - 22.x
            node: 22.18.0
            os: ubuntu-24.04
          - label: Linux - 24.x
            node: 24.5.0
            os: ubuntu-24.04
          - label: Win - 22.x
            node: 22.18.0
            os: windows-2025
          - label: Win - 24.x
            node: 24.5.0
            os: windows-2025
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"
      - uses: "nick-fields/retry@v3.0.2"
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Run massimo-cli package test suite
        run: cd packages/massimo-cli && pnpm test && pnpm run lint

  massimo-cli-e2e:
    name: "massimo-cli-e2e - ${{ matrix.label }}"
    needs: setup
    if: ${{ !inputs.job || inputs.job == 'massimo-cli-e2e' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - label: Linux - 22.x
            node: 22.18.0
            os: ubuntu-24.04
          - label: Linux - 24.x
            node: 24.5.0
            os: ubuntu-24.04
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@v4.1.0
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"
      - uses: "nick-fields/retry@v3.0.2"
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install --frozen-lockfile
      - name: Install E2E Playwright browsers
        run: cd packages/massimo-cli && pnpm exec playwright install
      - name: Run massimo-cli package e2e test suite
        run: cd packages/massimo-cli && pnpm e2e:test
